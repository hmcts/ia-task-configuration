<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="https://www.omg.org/spec/DMN/20191111/MODEL/" xmlns:dmndi="https://www.omg.org/spec/DMN/20191111/DMNDI/" xmlns:dc="http://www.omg.org/spec/DMN/20180521/DC/" xmlns:biodi="http://bpmn.io/schema/dmn/biodi/2.0" xmlns:camunda="http://camunda.org/schema/1.0/dmn" id="wa-configuration-definition" name="DRD" namespace="http://camunda.org/schema/1.0/dmn" exporter="Camunda Modeler" exporterVersion="5.14.0">
  <decision id="wa-task-configuration-ia-asylum" name="Task configuration DMN" camunda:historyTimeToLive="P90D">
    <decisionTable id="DecisionTable_14cx079" hitPolicy="COLLECT">
      <input id="InputClause_1gxyo7f" label="CCD Case Data" camunda:inputVariable="caseData">
        <inputExpression id="LiteralExpression_0mra7c4" typeRef="string">
          <text></text>
        </inputExpression>
      </input>
      <input id="InputClause_1gmuynt" label="Task type" biodi:width="415" camunda:inputVariable="taskType">
        <inputExpression id="LiteralExpression_06iiuqg" typeRef="string">
          <text>if(taskAttributes != null and taskAttributes.taskType != null) then
                        taskAttributes. taskType
                        else if(taskType != null) then
                        taskType
                        else
                        null
                    </text>
        </inputExpression>
      </input>
      <output id="Output_1" label="Name" name="name" typeRef="string" />
      <output id="OutputClause_021y3bb" label="Value" name="value" typeRef="string" biodi:width="803" />
      <output id="OutputClause_06m3ktt" label="Can Reconfigure?" name="canReconfigure" typeRef="boolean" biodi:width="192" />
      <rule id="DecisionRule_0u7yi27">
        <inputEntry id="UnaryTests_03ky0ek">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_03q2nz0">
          <text></text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0nkps91">
          <text>"caseName"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_06tqng3">
          <text>caseData.appellantGivenNames + " " + caseData.appellantFamilyName</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_09ruaaf">
          <text>true</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_0oagl97">
        <inputEntry id="UnaryTests_0mkzt2r">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_1esseck">
          <text></text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0selern">
          <text>"appealType"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0t707ev">
          <text>
                        if caseData.appealType = "refusalOfHumanRights" then
                        "Human rights"
                        else if caseData.appealType = "refusalOfEu" then
                        "EEA"
                        else if caseData.appealType = "deprivation" then
                        "DoC"
                        else if caseData.appealType = "protection" then
                        "Protection"
                        else if caseData.appealType = "revocationOfProtection" then
                        "Revocation"
                        else if caseData.appealType = "euSettlementScheme" then
                        "EUSS"
                        else ""
                    </text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1ndtqfy">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_0r3u9cf">
        <inputEntry id="UnaryTests_1bqxdqr">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_0wxfevs">
          <text></text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0etwrk3">
          <text>"region"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_05korws">
          <text>
                        if (caseData.caseManagementLocation != null and caseData.caseManagementLocation.region != null)
                        then
                        caseData.caseManagementLocation.region else "1"
                    </text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0dwx9qa">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_06fd9qz">
        <inputEntry id="UnaryTests_0slfog9">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_1u21xrs">
          <text></text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0kun6mv">
          <text>"location"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0jj1wzo">
          <text>
                        if (caseData.caseManagementLocation != null and caseData.caseManagementLocation.baseLocation !=
                        null) then
                        caseData.caseManagementLocation.baseLocation else "227101"
                    </text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1wrzh5i">
          <text>true</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_1oirne1">
        <inputEntry id="UnaryTests_04xtpdu">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_1ssoq5v">
          <text></text>
        </inputEntry>
        <outputEntry id="LiteralExpression_1lvlmxm">
          <text>"locationName"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0xp4dc7">
          <text>
                        if (caseData.caseManagementLocation != null and caseData.caseManagementLocation.baseLocation !=
                        null and caseData.staffLocation != null) then
                        caseData.staffLocation else "Newport"
                    </text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1la2dkb">
          <text>true</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_03afipt">
        <inputEntry id="UnaryTests_0aqybrx">
          <text>-</text>
        </inputEntry>
        <inputEntry id="UnaryTests_0nmr895">
          <text></text>
        </inputEntry>
        <outputEntry id="LiteralExpression_04r7w97">
          <text>"caseManagementCategory"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_099dwbs">
          <text>
                        if (caseData.caseManagementCategory !=null and caseData.caseManagementCategory.value.code =
                        "refusalOfHumanRights") then
                        "Human rights"
                        else if (caseData.caseManagementCategory !=null and caseData.caseManagementCategory.value.code =
                        "refusalOfEu") then
                        "EEA"
                        else if (caseData.caseManagementCategory !=null and caseData.caseManagementCategory.value.code =
                        "deprivation") then
                        "DoC"
                        else if (caseData.caseManagementCategory !=null and caseData.caseManagementCategory.value.code =
                        "protection") then
                        "Protection"
                        else if (caseData.caseManagementCategory !=null and caseData.caseManagementCategory.value.code =
                        "revocationOfProtection") then
                        "Revocation"
                        else if (caseData.caseManagementCategory !=null and caseData.caseManagementCategory.value.code =
                        "euSettlementScheme") then
                        "EUSS"
                        else if caseData.appealType = "refusalOfHumanRights" then
                        "Human rights"
                        else if caseData.appealType = "refusalOfEu" then
                        "EEA"
                        else if caseData.appealType = "deprivation" then
                        "DoC"
                        else if caseData.appealType = "protection" then
                        "Protection"
                        else if caseData.appealType = "revocationOfProtection" then
                        "Revocation"
                        else if caseData.appealType = "euSettlementScheme" then
                        "EUSS"
                        else ""
                    </text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1oq20o8">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_0ikmf14">
        <inputEntry id="UnaryTests_0epux74">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_1y3kj1v">
          <text>
                        "arrangeOfflinePayment",
                        "markCaseAsPaid",
                        "attendCma",
                        "caseSummaryHearingBundleStartDecision",
                        "followUpExtendedDirection",
                        "followUpNonStandardDirection",
                        "reviewClarifyingQuestionsAnswers",
                        "reviewRemissionApplication",
                        "assignAFTPAJudge",
                        "sendPaymentRequest",
                        "markAsPaid",
                        "reviewRemittedAppeal",
                        "reviewAppealSetAsideUnderRule35",
                        "reviewAppealSetAsideUnderRule32",
                        "reviewAriaRemissionApplication",
                        "reviewDraftAppeal",
                        "printAndSendHoBundle",
                        "printAndSendHoResponse",
                        "printAndSendHearingRequirements",
                        "printAndSendHearingBundle",
                        "printAndSendDecisionCorrectedRule31",
                        "printAndSendDecisionCorrectedRule32",
                        "printAndSendHoApplication",
                        "printAndSendHoEvidence",
                        "printAndSendAppealDecision",
                        "printAndSendFTPADecision",
                        "printAndSendReheardHearingRequirements",
                        "processFeeRefund"
                      </text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0rvgay2">
          <text>"workType"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0zoponq">
          <text>"routine_work"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_19npk6t">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_1csczvs">
        <inputEntry id="UnaryTests_0wmnz5z">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_1gm06lg">
          <text>
                        "reviewTheAppeal",
                        "followUpOverdueRespondentEvidence",
                        "reviewRespondentEvidence",
                        "followUpOverdueCaseBuilding",
                        "reviewAppealSkeletonArgument",
                        "followUpOverdueReasonsForAppeal",
                        "reviewReasonsForAppeal",
                        "followUpOverdueClarifyingAnswers",
                        "reviewClarifyingAnswers",
                        "followUpOverdueRespondentReview",
                        "reviewRespondentResponse",
                        "followUpOverdueCMARequirements",
                        "reviewCmaRequirements",
                        "reviewAdditionalEvidence",
                        "reviewAdditionalHomeOfficeEvidence",
                        "reviewAdditionalAppellantEvidence",
                        "reviewAddendumHomeOfficeEvidence",
                        "reviewAddendumAppellantEvidence",
                        "reviewAddendumEvidence",
                        "decideOnTimeExtension",
                        "sendDecisionsAndReasons"</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0omxasv">
          <text>"workType"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0mfd2ul">
          <text>"decision_making_work"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0mhslbm">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_03n8x3v">
        <inputEntry id="UnaryTests_0u2qxu3">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_1ps3x4j">
          <text>"generateDraftDecisionAndReasons","uploadDecision","uploadHearingRecording","postHearingAttendeesDurationAndRecording","editListing","followUpOverdueHearingRequirements","reviewHearingRequirements","allocateHearingJudge","prepareDecisionsAndReasons","startDecisionsAndReasonsDocument","createHearingBundle","createCaseSummary","listTheCase","hearingException","cmrListed","cmrUpdated","relistCase","reviewInterpreters"</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0c3eia6">
          <text>"workType"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_19poitv">
          <text>"hearing_work"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_02mo95c">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_1mgtmkd">
        <inputEntry id="UnaryTests_0mpogvu">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_0uoqs4p">
          <text>
		        "processApplicationAdjourn",
		        "processApplicationExpedite",
		        "processApplicationTimeExtension",
		        "processApplicationTransfer",
		        "processApplicationWithdraw",
		        "processApplicationUpdateHearingRequirements",
		        "processApplicationUpdateAppealDetails",
		        "processApplicationReinstateAnEndedAppeal",
		        "processApplicationOther",
		        "processApplicationLink/UnlinkAppeals",
                        "processHearingRequirementsApplication",
                        "processHearingCentreApplication",
                        "processApplicationToExpedite",
                        "processApplicationToTransfer",
                        "processApplicationForTimeExtension",
                        "processApplicationToWithdraw",
                        "processAppealDetailsApplication",
                        "processReinstatementApplication",
                        "processApplicationToReviewDecision",
                        "reviewSetAsideDecisionApplication",
                        "followUpSetAsideDecision",
"processApplicationChangeHearingType"
 </text>
        </inputEntry>
        <outputEntry id="LiteralExpression_1qi2rsb">
          <text>"workType"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1spq9ei">
          <text>"applications"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1cyayj1">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_00yasz5">
        <inputEntry id="UnaryTests_0zfo8ln">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_04wtfxs">
          <text>"decideAnFTPA"</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_1ywf3hm">
          <text>"workType"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0jcwzi7">
          <text>"upper_tribunal"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0bikbnv">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_00hw86q">
        <inputEntry id="UnaryTests_1ov750e">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_1466etp">
          <text>"followUpNoticeOfChange", "reviewSpecificAccessRequestJudiciary","reviewSpecificAccessRequestLegalOps","reviewSpecificAccessRequestAdmin","reviewSpecificAccessRequestCTSC"</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0bjcvtf">
          <text>"workType"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0qvacss">
          <text>"access_requests"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_08zn369">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_1jvi31e">
        <inputEntry id="UnaryTests_1ae1kaa">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_1g8j5k3">
          <text>"reviewMigratedCase"</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_08pavof">
          <text>"workType"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0429ti8">
          <text>"review_case"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1efp1zj">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_16zvd79">
        <inputEntry id="UnaryTests_0zsiyu0">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_0b3q932">
          <text>"reviewSpecificAccessRequestJudiciary","reviewSpecificAccessRequestLegalOps","reviewSpecificAccessRequestAdmin","reviewSpecificAccessRequestCTSC"</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_1hrei14">
          <text>"additionalProperties_roleAssignmentId"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1h9eb82">
          <text>if (taskAttributes !=null and taskAttributes.roleAssignmentId != null) then taskAttributes.roleAssignmentId else "1234"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1q1yppm">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_1dhhpyl">
        <inputEntry id="UnaryTests_13pqmkc">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_10f3uas">
          <text>
		        "processApplicationAdjourn",
		        "processApplicationExpedite",
		        "processApplicationTimeExtension",
		        "processApplicationTransfer",
		        "processApplicationWithdraw",
		        "processApplicationUpdateHearingRequirements",
		        "processApplicationUpdateAppealDetails",
		        "processApplicationReinstateAnEndedAppeal",
		        "processApplicationOther",
		        "processApplicationLink/UnlinkAppeals",           "processApplicationChangeHearingType",
                        "reviewTheAppeal",
                        "decideOnTimeExtension",
                        "reviewRespondentEvidence",
                        "reviewAppealSkeletonArgument",
                        "reviewReasonsForAppeal",
                        "reviewClarifyingQuestionsAnswers",
                        "reviewCmaRequirements",
                        "attendCma",
                        "reviewRespondentResponse",
                        "caseSummaryHearingBundleStartDecision",
                        "reviewHearingRequirements",
                        "followUpOverdueRespondentEvidence",
                        "followUpOverdueCaseBuilding",
                        "followUpOverdueReasonsForAppeal",
                        "followUpOverdueClarifyingAnswers",
                        "followUpOverdueCmaRequirements",
                        "followUpOverdueRespondentReview",
                        "followUpOverdueHearingRequirements",
                        "followUpNonStandardDirection",
                        "followUpNoticeOfChange",
                        "reviewAdditionalEvidence",
                        "reviewAdditionalHomeOfficeEvidence",
                        "startDecisionsAndReasonsDocument",
                        "reviewRemittedAppeal",
                        "reviewAppealSetAsideUnderRule35",
                        "reviewAppealSetAsideUnderRule32"</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_05l5bvs">
          <text>"roleCategory"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_18y163a">
          <text>"LEGAL_OPERATIONS"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0cde4ic">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_00emsux">
        <inputEntry id="UnaryTests_1102935">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_0je9679">
          <text>
                        "followUpExtendedDirection",
                        "createHearingBundle",
                        "createCaseSummary",
                        "reviewAddendumEvidence"
                    </text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0z7iapq">
          <text>"roleCategory"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0cs7vxm">
          <text>"LEGAL_OPERATIONS"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0rnzyup">
          <text>true</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_01muxrj">
        <inputEntry id="UnaryTests_0ullysh">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_1glizm3">
          <text>"arrangeOfflinePayment","markCaseAsPaid","allocateHearingJudge","uploadHearingRecording","postHearingAttendeesDurationAndRecording","editListing","followUpSetAsideDecision","hearingException","cmrListed","cmrUpdated","relistCase","reviewInterpreters","reviewMigratedCase","reviewAriaRemissionApplication","printAndSendHoBundle","printAndSendHoResponse","printAndSendHearingRequirements","printAndSendHearingBundle","printAndSendDecisionCorrectedRule31","printAndSendDecisionCorrectedRule32","printAndSendHoApplication","printAndSendHoEvidence","printAndSendAppealDecision","printAndSendFTPADecision","printAndSendReheardHearingRequirements"</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_1131kat">
          <text>"roleCategory"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0el7tae">
          <text>"ADMIN"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1exp16h">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_01cmxvs">
        <inputEntry id="UnaryTests_1np8ii5">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_15ftuu0">
          <text>"generateDraftDecisionAndReasons","uploadDecision","reviewAddendumHomeOfficeEvidence","reviewAddendumAppellantEvidence","reviewSpecificAccessRequestJudiciary","reviewSpecificAccessRequestLegalOps","reviewSpecificAccessRequestAdmin","reviewSpecificAccessRequestCTSC","processApplicationToReviewDecision","sendDecisionsAndReasons","prepareDecisionsAndReasons","decideAnFTPA","reviewSetAsideDecisionApplication"</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_15nowth">
          <text>"roleCategory"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1cn9cb2">
          <text>"JUDICIAL"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0me2qfr">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_0ubs7r5">
        <inputEntry id="UnaryTests_00s1cbq">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_0xh5are">
          <text>"reviewRemissionApplication","assignAFTPAJudge","listTheCase","sendPaymentRequest","markAsPaid","processFeeRefund","reviewDraftAppeal"</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0vqliz7">
          <text>"roleCategory"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1lg0gh7">
          <text>"CTSC"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0mrh555">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_1lny4x5">
        <inputEntry id="UnaryTests_1jpdq6j">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_1hpq8zy">
          <text></text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0omo7uu">
          <text>"description"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1iaoi95">
          <text>                        if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "processApplicationAdjourn" or taskType != null and taskType = "processApplicationAdjourn")
                        then "[Decide an application](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/decideAnApplication)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "processApplicationExpedite" or taskType != null and taskType = "processApplicationExpedite")
                        then "[Decide an application](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/decideAnApplication)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "processApplicationTimeExtension" or taskType != null and taskType = "processApplicationTimeExtension")
                        then "[Decide an application](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/decideAnApplication)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "processApplicationTransfer" or taskType != null and taskType = "processApplicationTransfer")
                        then "[Decide an application](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/decideAnApplication)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "processApplicationWithdraw" or taskType != null and taskType = "processApplicationWithdraw")
                        then "[Decide an application](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/decideAnApplication)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "processApplicationUpdateHearingRequirements" or taskType != null and taskType = "processApplicationUpdateHearingRequirements")
                        then "[Decide an application](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/decideAnApplication)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "processApplicationUpdateAppealDetails" or taskType != null and taskType = "processApplicationUpdateAppealDetails")
                        then "[Decide an application](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/decideAnApplication)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "processApplicationReinstateAnEndedAppeal" or taskType != null and taskType = "processApplicationReinstateAnEndedAppeal")
                        then "[Decide an application](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/decideAnApplication)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "processApplicationOther" or taskType != null and taskType = "processApplicationOther")
                        then "[Decide an application](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/decideAnApplication)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "processApplicationLink/UnlinkAppeals" or taskType != null and taskType = "processApplicationLink/UnlinkAppeals")
                        then "[Decide an application](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/decideAnApplication)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "processApplicationChangeHearingType" or taskType != null and taskType = "processApplicationChangeHearingType")
                        then "[Decide an application](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/decideAnApplication)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "reviewTheAppeal" or taskType != null and taskType = "reviewTheAppeal")
                        then "[Request respondent evidence](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/requestRespondentEvidence)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "decideOnTimeExtension" or taskType != null and taskType ="decideOnTimeExtension")
                        then "[Change the direction due date](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/changeDirectionDueDate)"
                        else if ((taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "reviewRespondentEvidence" or taskType != null and taskType ="reviewRespondentEvidence") and (caseData != null and caseData.journeyType = "aip"))
                        then "[Request reasons for appeal](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/requestReasonsForAppeal)&lt;br /&gt;[Send non-standard direction](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/sendDirection)"
			                  else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "reviewRespondentEvidence" or taskType != null and taskType ="reviewRespondentEvidence")
                        then "[Request case building](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/requestCaseBuilding)&lt;br /&gt;[Send non-standard direction](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/sendDirection)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "reviewAppealSkeletonArgument" or taskType != null and taskType ="reviewAppealSkeletonArgument")
                        then "[Request respondent review](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/requestRespondentReview)&lt;br /&gt;[Request case edit](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/requestCaseEdit)"
                        else if ((taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "reviewReasonsForAppeal" or taskType != null and taskType ="reviewReasonsForAppeal") and (caseData != null and caseData.journeyType = "aip"))
                        then "[Request respondent review](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/requestRespondentReview)&lt;br /&gt;[Send direction with questions](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/sendDirectionWithQuestions)"
			                  else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "reviewReasonsForAppeal" or taskType != null and taskType ="reviewReasonsForAppeal")
                        then "[Request respondent review](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/requestRespondentReview)&lt;br /&gt;[Request CMA requirements](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/requestCmaRequirements)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "reviewCmaRequirements" or taskType != null and taskType = "reviewCmaRequirements")
                        then "[Review CMA Requirements](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/reviewCmaRequirements)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "attendCma" or taskType != null and taskType = "attendCma")
                        then "[Update case details after CMA](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/updateDetailsAfterCma)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "reviewRespondentResponse" or taskType != null and taskType = "reviewRespondentResponse")
                        then "[Review Home Office response](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/requestResponseReview)&lt;br /&gt;[Amend appeal response](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/requestResponseAmend)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "createHearingBundle" or taskType != null and taskType = "createHearingBundle")
                        then "[Generate the hearing bundle](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/generateHearingBundle)&lt;br /&gt;[Customise the hearing bundle](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/customiseHearingBundle)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "startDecisionsAndReasonsDocument" or taskType != null and taskType ="startDecisionsAndReasonsDocument")
                        then "[Start decision and reasons document](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/decisionAndReasonsStarted/decisionAndReasonsStartedcaseIntroduction)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "reviewHearingRequirements" or taskType != null and taskType = "reviewHearingRequirements")
                        then "[Review hearing requirements](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/reviewHearingRequirements)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "reviewAdditionalEvidence" or taskType != null and taskType ="reviewAdditionalEvidence")
                        then "[Review evidence](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/markEvidenceAsReviewed)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "reviewAdditionalHomeOfficeEvidence" or taskType != null and taskType ="reviewAdditionalHomeOfficeEvidence")	 then "[Review evidence](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/markEvidenceAsReviewed)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "arrangeOfflinePayment" or taskType != null and taskType ="arrangeOfflinePayment") then "[Mark the appeal as paid](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/markAppealPaid)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "markCaseAsPaid" or taskType != null and taskType ="markCaseAsPaid") then "[Mark the appeal as paid](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/markAppealPaid)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "allocateHearingJudge" or taskType != null and taskType ="allocateHearingJudge") then "[Allocate Hearing Judge](/role-access/allocate-role/allocate?caseId=${[CASE_REFERENCE]}&amp;roleCategory=JUDICIAL&amp;jurisdiction=IA)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "uploadHearingRecording" or taskType != null and taskType = "uploadHearingRecording") then "[Upload the hearing recording](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/uploadHearingRecording)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "postHearingAttendeesDurationAndRecording" or taskType != null and taskType = "postHearingAttendeesDurationAndRecording") then "[Post hearing – attendees, duration and recording](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/uploadHearingRecording)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "generateDraftDecisionAndReasons" or taskType != null and taskType = "generateDraftDecisionAndReasons")	then "[Generate the draft decisions and reasons document](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/generateDecisionAndReasons)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "reviewAddendumEvidence" or taskType != null and taskType = "reviewAddendumEvidence") then "[Review evidence](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/markAddendumEvidenceAsReviewed)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "editListing" or taskType != null and taskType = "editListing") then "[Edit case listing](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/editCaseListing)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "prepareDecisionsAndReasons" or taskType != null and taskType = "prepareDecisionsAndReasons") then "[Prepare decisions and reasons](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/generateDecisionAndReasons)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "decideAnFTPA" or taskType != null and taskType = "decideAnFTPA") then "[Decide FTPA application](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/decideFtpaApplication)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "sendDecisionsAndReasons" or taskType != null and taskType = "sendDecisionsAndReasons") then "[Complete decision and reasons](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/sendDecisionAndReasons)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "processApplicationToReviewDecision" or taskType != null and taskType = "processApplicationToReviewDecision") then "[Decide an application](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/decideAnApplication)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "reviewRemissionApplication" or taskType != null and taskType = "reviewRemissionApplication") then "[Record remission decision](/cases/case-details/${[CASE_REFERENCE]}/trigger/recordRemissionDecision/recordRemissionDecisionremissionDecision)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "assignAFTPAJudge" or taskType != null and taskType = "assignAFTPAJudge") then "[Record allocated Judge](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/recordAllocatedJudge)"
                        else if ((taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "listTheCase" or taskType != null and taskType = "listTheCase") and (caseData != null and caseData.isIntegrated = null or caseData != null and caseData.isIntegrated = "No")) then "[List the case](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/listCase)"
                        else if ((taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "listTheCase" or taskType != null and taskType = "listTheCase") and (caseData != null and caseData.isIntegrated = "Yes")) then "[List the case](cases/case-details/${[CASE_REFERENCE]}/hearings)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "sendPaymentRequest" or taskType != null and taskType = "sendPaymentRequest") then "[Mark payment request sent](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/markPaymentRequestSent)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "markAsPaid" or taskType != null and taskType = "markAsPaid") then "[Mark appeal as paid](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/markAppealPaid)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "reviewMigratedCase" or taskType != null and taskType = "reviewMigratedCase") then "[Progress migrated case](/case/IA/Asylum/${[CASE_REFERENCE]}/trigger/progressMigratedCase)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "hearingException" or taskType != null and taskType = "hearingException") then "[Go to case](cases/case-details/${[CASE_REFERENCE]}/hearings)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "cmrListed" or taskType != null and taskType = "cmrListed") then "[View the Hearings](cases/case-details/${[CASE_REFERENCE]}/hearings)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "cmrUpdated" or taskType != null and taskType = "cmrUpdated") then "[View the Hearings](cases/case-details/${[CASE_REFERENCE]}/hearings)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "relistCase" or taskType != null and taskType = "relistCase") then "[Relist the hearing](cases/case-details/${[CASE_REFERENCE]}/hearings)"
                        else if (taskAttributes != null and taskAttributes.taskType != null and taskAttributes.taskType = "reviewInterpreters" or taskType != null and taskType = "reviewInterpreters") then "[View the Hearings](cases/case-details/${[CASE_REFERENCE]}/hearings)"
                        else if (taskAttributes != null and taskAttributes.taskId != null and taskAttributes.roleAssignmentId != null) then "[Review Access Request](/role-access/" + taskAttributes.taskId + "/assignment/" + taskAttributes.roleAssignmentId + "/specific-access)"
                        else ""
          </text>
        </outputEntry>
        <outputEntry id="LiteralExpression_184xf0n">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_15pnkjv">
        <inputEntry id="UnaryTests_0cuyrmi">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_1xqy885">
          <text></text>
        </inputEntry>
        <outputEntry id="LiteralExpression_17n2o8t">
          <text>"dueDateOrigin"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1olr8gj">
          <text>now()</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1jfd9es">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_1xk0urt">
        <inputEntry id="UnaryTests_03vtzac">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_0xz0tmx">
          <text></text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0n2s323">
          <text>"dueDateNonWorkingCalendar"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_01me67r">
          <text>"https://www.gov.uk/bank-holidays/england-and-wales.json, https://raw.githubusercontent.com/hmcts/ia-task-configuration/master/src/test/resources/extra-non-working-day-calendar.json"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_15rsx8r">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_0nwq04c">
        <inputEntry id="UnaryTests_0dicms7">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_01h3gvh">
          <text>"processApplicationAdjourn",
"processApplicationExpedite",
"processApplicationTimeExtension",
"processApplicationTransfer",
"processApplicationWithdraw",
"processApplicationUpdateHearingRequirements",
"processApplicationUpdateAppealDetails",
"processApplicationReinstateAnEndedAppeal",
"processApplicationOther",
"processApplicationLink/UnlinkAppeals",
"reviewRemittedAppeal",
"reviewAppealSetAsideUnderRule35",
"reviewAppealSetAsideUnderRule32",
"reviewDraftAppeal",
"processFeeRefund"</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_18mybq6">
          <text>"dueDateIntervalDays"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0ndl97b">
          <text>5</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1rv7ncp">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_087mjzf">
        <inputEntry id="UnaryTests_0u9y6os">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_12nptxn">
          <text>"processApplicationToReviewDecision",
"editListing",
"reviewTheAppeal",
"decideOnTimeExtension",
"reviewRespondentEvidence",
"reviewAdditionalEvidence",
"reviewAdditionalHomeOfficeEvidence",
"reviewAppealSkeletonArgument",
"reviewReasonsForAppeal",
"reviewClarifyingQuestionsAnswers",
"reviewCmaRequirements",
"attendCma",
"reviewRespondentResponse",
"caseSummaryHearingBundleStartDecision",
"reviewHearingRequirements",
"followUpOverdueRespondentEvidence",
"followUpExtendedDirection",
"followUpOverdueCaseBuilding",
"followUpOverdueReasonsForAppeal",
"followUpOverdueClarifyingAnswers",
"followUpOverdueCmaRequirements",
"followUpOverdueRespondentReview",
"followUpOverdueHearingRequirements",
"followUpNonStandardDirection",
"followUpNoticeOfChange",
"reviewAddendumEvidence",
"reviewRemissionApplication",
"assignAFTPAJudge",
"listTheCase",
"reviewSetAsideDecisionApplication",
"cmrListed",
"cmrUpdated",
"reviewAriaRemissionApplication"</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_1kbin0j">
          <text>"dueDateIntervalDays"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_01i1jmt">
          <text>2</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_161g7g1">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_119qnrg">
        <inputEntry id="UnaryTests_0dlohpc">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_1cwkxoe">
          <text>"sendDecisionsAndReasons",
"prepareDecisionsAndReasons",
"sendPaymentRequest",
"uploadHearingRecording",
"postHearingAttendeesDurationAndRecording",
"decideAnFTPA",
"printAndSendHoBundle",
"printAndSendHoResponse",
"printAndSendHearingRequirements",
"printAndSendHearingBundle",
"printAndSendDecisionCorrectedRule31",
"printAndSendDecisionCorrectedRule32",
"printAndSendHoApplication",
"printAndSendHoEvidence",
"printAndSendAppealDecision",
"printAndSendFTPADecision",
"printAndSendReheardHearingRequirements"</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0ssbj4t">
          <text>"dueDateIntervalDays"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0ftw3ss">
          <text>0</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0zkr1zo">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_1sax75r">
        <inputEntry id="UnaryTests_1b0k7fa">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_0ss35tl">
          <text>"allocateHearingJudge"</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0r6yt12">
          <text>"dueDateIntervalDays"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_01trnsy">
          <text>3</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_04lsvsa">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_0ca9xpl">
        <inputEntry id="UnaryTests_15bophj">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_1aa2bwu">
          <text>"markAsPaid"</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0k6nifs">
          <text>"dueDateIntervalDays"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1vbgdhh">
          <text>14</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_11bqayr">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_0lcrgo2">
        <inputEntry id="UnaryTests_1iep6sq">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_11yqpax">
          <text>"reviewMigratedCase"</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0rpuy0z">
          <text>"dueDateIntervalDays"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0jfelrx">
          <text>caseData.ariaMigrationTaskDueDays</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1xvptid">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_0jlgetc">
        <inputEntry id="UnaryTests_1k2ybph">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_0hyv74b">
          <text>"markAsPaid"</text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0tmigm7">
          <text>"dueDateSkipNonWorkingDays"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0925497">
          <text>false</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0sztdoj">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_165bqfp">
        <inputEntry id="UnaryTests_1cy9w2v">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_0sk78xf">
          <text></text>
        </inputEntry>
        <outputEntry id="LiteralExpression_1jpp20e">
          <text>"majorPriority"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0mq5gsr">
          <text>5000</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1f4fovi">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_0d4k7a3">
        <inputEntry id="UnaryTests_17p5sgb">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_0bg2thb">
          <text></text>
        </inputEntry>
        <outputEntry id="LiteralExpression_07pamwu">
          <text>"minorPriority"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1un1fpp">
          <text>500</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1cssjo4">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_1iccxzh">
        <inputEntry id="UnaryTests_1oh593l">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_08641k9">
          <text></text>
        </inputEntry>
        <outputEntry id="LiteralExpression_1x7qwr7">
          <text>"priorityDateOriginRef"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0vpgaux">
          <text>"dueDate"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_16sccu5">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_0n6xlhj">
        <inputEntry id="UnaryTests_0oe8d4b">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_1q7g8iu">
          <text></text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0s6253e">
          <text>"dueDateNonWorkingDaysOfWeek"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1fuo3hm">
          <text>"SATURDAY,SUNDAY"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1omikjm">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_11jkcdp">
        <inputEntry id="UnaryTests_065p43f">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_08t14g0">
          <text></text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0nzrd2w">
          <text>"calculatedDates"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0sbydg2">
          <text>"nextHearingDate,dueDate,priorityDate"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_102zbyh">
          <text>false</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_0vtarsw">
        <inputEntry id="UnaryTests_1aroypd">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_190yqaw">
          <text></text>
        </inputEntry>
        <outputEntry id="LiteralExpression_0y4vw5v">
          <text>"nextHearingId"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_1u6jl9v">
          <text>if (caseData != null and caseData.nextHearingDetails != null and caseData.nextHearingDetails.hearingID != null) then caseData.nextHearingDetails.hearingID else ""</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0861nag">
          <text>true</text>
        </outputEntry>
      </rule>
      <rule id="DecisionRule_0tqahkx">
        <inputEntry id="UnaryTests_0sml83s">
          <text></text>
        </inputEntry>
        <inputEntry id="UnaryTests_0tn3ahk">
          <text></text>
        </inputEntry>
        <outputEntry id="LiteralExpression_03m6m1g">
          <text>"nextHearingDate"</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_0tttra8">
          <text>if (caseData != null and caseData.nextHearingDetails != null and caseData.nextHearingDetails.hearingDateTime != null) then caseData.nextHearingDetails.hearingDateTime else ""</text>
        </outputEntry>
        <outputEntry id="LiteralExpression_02y8ncm">
          <text>true</text>
        </outputEntry>
      </rule>
    </decisionTable>
  </decision>
  <dmndi:DMNDI>
    <dmndi:DMNDiagram id="DMNDiagram_1ifewa3">
      <dmndi:DMNShape id="DMNShape_0ijg0or" dmnElementRef="wa-task-configuration-ia-asylum">
        <dc:Bounds height="80" width="180" x="150" y="80" />
      </dmndi:DMNShape>
    </dmndi:DMNDiagram>
  </dmndi:DMNDI>
</definitions>
